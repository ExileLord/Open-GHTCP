using ns5;
using System;

namespace ns4
{
	public class Class93 : Class92
	{
		public class Class98 : Class92.Class94
		{
			public static readonly float[] float_1;

			public static readonly float[] float_2;

			public static readonly float[] float_3;

			public static readonly int[] int_0;

			public static readonly float[][] float_4;

			public static readonly float[] float_5;

			public static readonly float[] float_6;

			public static readonly float[] float_7;

			public static readonly float[][] float_8;

			public static readonly int[] int_1;

			public static readonly float[] float_9;

			public static readonly float[] float_10;

			public static readonly float[] float_11;

			public static readonly int[] int_2;

			public static readonly float[] float_12;

			public static readonly float[] float_13;

			public static readonly float[] float_14;

			public static readonly int[] int_3;

			public static readonly float[] float_15;

			public static readonly float[] float_16;

			public static readonly float[] float_17;

			public static readonly int[] int_4;

			public static readonly float[][] float_18;

			public static readonly float[] float_19;

			public static readonly float[] float_20;

			public static readonly float[] float_21;

			public readonly int int_5;

			public int int_6;

			public int int_7;

			public float float_22;

			public float float_23;

			public float float_24;

			public readonly int[] int_8;

			public readonly float[][] float_25;

			public readonly float[] float_26;

			public int int_9;

			public int int_10;

			public readonly float[] float_27;

			public readonly float[] float_28;

			public readonly float[] float_29;

			public Class98(int int_11) : base()
			{
				int[] array = new int[1];
				this.int_8 = array;
				this.float_25 = new float[2][];
				float[] array2 = new float[1];
				this.float_26 = array2;
				this.float_27 = new float[3];
				float[] array3 = new float[1];
				this.float_28 = array3;
				float[] array4 = new float[1];
				this.float_29 = array4;
				//base..ctor();
				this.int_5 = int_11;
				this.int_10 = 0;
				this.int_9 = 0;
			}

			public virtual int vmethod_4(zzSoundClass class107_0)
			{
				if (class107_0.method_3() == Enum3.const_1)
				{
					int num = class107_0.method_5();
					if (class107_0.method_8() != Enum5.const_3)
					{
						if (num == 4)
						{
							num = 1;
						}
						else
						{
							num -= 4;
						}
					}
					if (num != 1)
					{
						if (num != 2)
						{
							if (this.int_5 <= 10)
							{
								return 4;
							}
							if (this.int_5 > 22)
							{
								return 2;
							}
							return 3;
						}
					}
					if (this.int_5 > 1)
					{
						return 3;
					}
					return 4;
				}
				else
				{
					if (this.int_5 <= 3)
					{
						return 4;
					}
					if (this.int_5 > 10)
					{
						return 2;
					}
					return 3;
				}
			}

			public virtual void vmethod_5(zzSoundClass class107_0, int int_11, int int_12, float[] float_30, int[] int_13, float[] float_31, float[] float_32)
			{
				int num = class107_0.method_5();
				if (class107_0.method_8() != Enum5.const_3)
				{
					if (num == 4)
					{
						num = 1;
					}
					else
					{
						num -= 4;
					}
				}
				if (num != 1)
				{
					if (num != 2)
					{
						if (this.int_5 <= 2)
						{
							this.float_25[int_12] = Class93.Class98.float_4[int_11];
							float_30[0] = Class93.Class98.float_5[int_11];
							int_13[0] = Class93.Class98.int_0[int_11];
							float_31[0] = Class93.Class98.float_6[int_11];
							float_32[0] = Class93.Class98.float_7[int_11];
							return;
						}
						this.float_25[int_12] = Class93.Class98.float_8[int_11];
						if (this.int_5 <= 10)
						{
							float_30[0] = Class93.Class98.float_9[int_11];
							int_13[0] = Class93.Class98.int_1[int_11];
							float_31[0] = Class93.Class98.float_10[int_11];
							float_32[0] = Class93.Class98.float_11[int_11];
							return;
						}
						if (this.int_5 <= 22)
						{
							float_30[0] = Class93.Class98.float_12[int_11];
							int_13[0] = Class93.Class98.int_2[int_11];
							float_31[0] = Class93.Class98.float_13[int_11];
							float_32[0] = Class93.Class98.float_14[int_11];
							return;
						}
						float_30[0] = Class93.Class98.float_15[int_11];
						int_13[0] = Class93.Class98.int_3[int_11];
						float_31[0] = Class93.Class98.float_16[int_11];
						float_32[0] = Class93.Class98.float_17[int_11];
						return;
					}
				}
				this.float_25[int_12] = Class93.Class98.float_18[int_11];
				float_30[0] = Class93.Class98.float_19[int_11];
				int_13[0] = Class93.Class98.int_4[int_11];
				float_31[0] = Class93.Class98.float_20[int_11];
				float_32[0] = Class93.Class98.float_21[int_11];
			}

			public override void vmethod_0(Class82 class82_0, zzSoundClass class107_0, Class101 class101_0)
			{
				int num = this.vmethod_4(class107_0);
				this.int_6 = class82_0.method_13(num);
				if (class101_0 != null)
				{
					class101_0.method_0(this.int_6, num);
				}
			}

			public virtual void vmethod_6(Class82 class82_0, Class101 class101_0)
			{
				if (this.int_6 == 0)
				{
					return;
				}
				this.int_7 = class82_0.method_13(2);
				if (class101_0 != null)
				{
					class101_0.method_0(this.int_7, 2);
				}
			}

			public override void vmethod_1(Class82 class82_0, zzSoundClass class107_0)
			{
				if (this.int_6 == 0)
				{
					return;
				}
				switch (this.int_7)
				{
				case 0:
					this.float_22 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_23 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_24 = Class92.Class94.float_0[class82_0.method_13(6)];
					break;
				case 1:
					this.float_22 = (this.float_23 = Class92.Class94.float_0[class82_0.method_13(6)]);
					this.float_24 = Class92.Class94.float_0[class82_0.method_13(6)];
					break;
				case 2:
					this.float_22 = (this.float_23 = (this.float_24 = Class92.Class94.float_0[class82_0.method_13(6)]));
					break;
				case 3:
					this.float_22 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_23 = (this.float_24 = Class92.Class94.float_0[class82_0.method_13(6)]);
					break;
				}
				this.vmethod_5(class107_0, this.int_6, 0, this.float_26, this.int_8, this.float_28, this.float_29);
			}

			public override bool vmethod_2(Class82 class82_0)
			{
				if (this.int_6 != 0)
				{
					if (this.float_25[0] != null)
					{
						int num = class82_0.method_13(this.int_8[0]);
						num += num << 1;
						float[] array = this.float_27;
						float[] array2 = this.float_25[0];
						int num2 = 0;
						int num3 = num;
						if (num3 > array2.Length - 3)
						{
							num3 = array2.Length - 3;
						}
						array[num2] = array2[num3];
						num3++;
						num2++;
						array[num2] = array2[num3];
						num3++;
						num2++;
						array[num2] = array2[num3];
					}
					else
					{
						this.float_27[0] = (float)class82_0.method_13(this.int_8[0]) * this.float_26[0] - 1f;
						this.float_27[1] = (float)class82_0.method_13(this.int_8[0]) * this.float_26[0] - 1f;
						this.float_27[2] = (float)class82_0.method_13(this.int_8[0]) * this.float_26[0] - 1f;
					}
				}
				this.int_10 = 0;
				return ++this.int_9 == 12;
			}

			public override bool vmethod_3(Enum4 enum4_0, Class80 class80_0, Class80 class80_1)
			{
				if (this.int_6 != 0 && enum4_0 != Enum4.const_2)
				{
					float num = this.float_27[this.int_10];
					if (this.float_25[0] == null)
					{
						num = (num + this.float_29[0]) * this.float_28[0];
					}
					if (this.int_9 <= 4)
					{
						num *= this.float_22;
					}
					else if (this.int_9 <= 8)
					{
						num *= this.float_23;
					}
					else
					{
						num *= this.float_24;
					}
					class80_0.method_2(num, this.int_5);
				}
				return ++this.int_10 == 3;
			}

			static Class98()
			{
				Class93.Class98.float_1 = new float[]
				{
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0f,
					-0.6666667f,
					0f,
					0f,
					-0.6666667f,
					0.6666667f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					0f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0f,
					0f,
					-0.6666667f,
					0f,
					0.6666667f,
					-0.6666667f,
					0f,
					-0.6666667f,
					0f,
					0f,
					0f,
					0f,
					0f,
					0.6666667f,
					0f,
					0f,
					-0.6666667f,
					0.6666667f,
					0f,
					0f,
					0.6666667f,
					0f,
					0.6666667f,
					0.6666667f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					0f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					0f,
					0.6666667f,
					0f,
					0f,
					0.6666667f,
					0.6666667f,
					0f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					0f,
					0.6666667f,
					0.6666667f,
					0.6666667f,
					0.6666667f,
					0.6666667f
				};
				Class93.Class98.float_2 = new float[]
				{
					-0.8f,
					-0.8f,
					-0.8f,
					-0.4f,
					-0.8f,
					-0.8f,
					0f,
					-0.8f,
					-0.8f,
					0.4f,
					-0.8f,
					-0.8f,
					0.8f,
					-0.8f,
					-0.8f,
					-0.8f,
					-0.4f,
					-0.8f,
					-0.4f,
					-0.4f,
					-0.8f,
					0f,
					-0.4f,
					-0.8f,
					0.4f,
					-0.4f,
					-0.8f,
					0.8f,
					-0.4f,
					-0.8f,
					-0.8f,
					0f,
					-0.8f,
					-0.4f,
					0f,
					-0.8f,
					0f,
					0f,
					-0.8f,
					0.4f,
					0f,
					-0.8f,
					0.8f,
					0f,
					-0.8f,
					-0.8f,
					0.4f,
					-0.8f,
					-0.4f,
					0.4f,
					-0.8f,
					0f,
					0.4f,
					-0.8f,
					0.4f,
					0.4f,
					-0.8f,
					0.8f,
					0.4f,
					-0.8f,
					-0.8f,
					0.8f,
					-0.8f,
					-0.4f,
					0.8f,
					-0.8f,
					0f,
					0.8f,
					-0.8f,
					0.4f,
					0.8f,
					-0.8f,
					0.8f,
					0.8f,
					-0.8f,
					-0.8f,
					-0.8f,
					-0.4f,
					-0.4f,
					-0.8f,
					-0.4f,
					0f,
					-0.8f,
					-0.4f,
					0.4f,
					-0.8f,
					-0.4f,
					0.8f,
					-0.8f,
					-0.4f,
					-0.8f,
					-0.4f,
					-0.4f,
					-0.4f,
					-0.4f,
					-0.4f,
					0f,
					-0.4f,
					-0.4f,
					0.4f,
					-0.4f,
					-0.4f,
					0.8f,
					-0.4f,
					-0.4f,
					-0.8f,
					0f,
					-0.4f,
					-0.4f,
					0f,
					-0.4f,
					0f,
					0f,
					-0.4f,
					0.4f,
					0f,
					-0.4f,
					0.8f,
					0f,
					-0.4f,
					-0.8f,
					0.4f,
					-0.4f,
					-0.4f,
					0.4f,
					-0.4f,
					0f,
					0.4f,
					-0.4f,
					0.4f,
					0.4f,
					-0.4f,
					0.8f,
					0.4f,
					-0.4f,
					-0.8f,
					0.8f,
					-0.4f,
					-0.4f,
					0.8f,
					-0.4f,
					0f,
					0.8f,
					-0.4f,
					0.4f,
					0.8f,
					-0.4f,
					0.8f,
					0.8f,
					-0.4f,
					-0.8f,
					-0.8f,
					0f,
					-0.4f,
					-0.8f,
					0f,
					0f,
					-0.8f,
					0f,
					0.4f,
					-0.8f,
					0f,
					0.8f,
					-0.8f,
					0f,
					-0.8f,
					-0.4f,
					0f,
					-0.4f,
					-0.4f,
					0f,
					0f,
					-0.4f,
					0f,
					0.4f,
					-0.4f,
					0f,
					0.8f,
					-0.4f,
					0f,
					-0.8f,
					0f,
					0f,
					-0.4f,
					0f,
					0f,
					0f,
					0f,
					0f,
					0.4f,
					0f,
					0f,
					0.8f,
					0f,
					0f,
					-0.8f,
					0.4f,
					0f,
					-0.4f,
					0.4f,
					0f,
					0f,
					0.4f,
					0f,
					0.4f,
					0.4f,
					0f,
					0.8f,
					0.4f,
					0f,
					-0.8f,
					0.8f,
					0f,
					-0.4f,
					0.8f,
					0f,
					0f,
					0.8f,
					0f,
					0.4f,
					0.8f,
					0f,
					0.8f,
					0.8f,
					0f,
					-0.8f,
					-0.8f,
					0.4f,
					-0.4f,
					-0.8f,
					0.4f,
					0f,
					-0.8f,
					0.4f,
					0.4f,
					-0.8f,
					0.4f,
					0.8f,
					-0.8f,
					0.4f,
					-0.8f,
					-0.4f,
					0.4f,
					-0.4f,
					-0.4f,
					0.4f,
					0f,
					-0.4f,
					0.4f,
					0.4f,
					-0.4f,
					0.4f,
					0.8f,
					-0.4f,
					0.4f,
					-0.8f,
					0f,
					0.4f,
					-0.4f,
					0f,
					0.4f,
					0f,
					0f,
					0.4f,
					0.4f,
					0f,
					0.4f,
					0.8f,
					0f,
					0.4f,
					-0.8f,
					0.4f,
					0.4f,
					-0.4f,
					0.4f,
					0.4f,
					0f,
					0.4f,
					0.4f,
					0.4f,
					0.4f,
					0.4f,
					0.8f,
					0.4f,
					0.4f,
					-0.8f,
					0.8f,
					0.4f,
					-0.4f,
					0.8f,
					0.4f,
					0f,
					0.8f,
					0.4f,
					0.4f,
					0.8f,
					0.4f,
					0.8f,
					0.8f,
					0.4f,
					-0.8f,
					-0.8f,
					0.8f,
					-0.4f,
					-0.8f,
					0.8f,
					0f,
					-0.8f,
					0.8f,
					0.4f,
					-0.8f,
					0.8f,
					0.8f,
					-0.8f,
					0.8f,
					-0.8f,
					-0.4f,
					0.8f,
					-0.4f,
					-0.4f,
					0.8f,
					0f,
					-0.4f,
					0.8f,
					0.4f,
					-0.4f,
					0.8f,
					0.8f,
					-0.4f,
					0.8f,
					-0.8f,
					0f,
					0.8f,
					-0.4f,
					0f,
					0.8f,
					0f,
					0f,
					0.8f,
					0.4f,
					0f,
					0.8f,
					0.8f,
					0f,
					0.8f,
					-0.8f,
					0.4f,
					0.8f,
					-0.4f,
					0.4f,
					0.8f,
					0f,
					0.4f,
					0.8f,
					0.4f,
					0.4f,
					0.8f,
					0.8f,
					0.4f,
					0.8f,
					-0.8f,
					0.8f,
					0.8f,
					-0.4f,
					0.8f,
					0.8f,
					0f,
					0.8f,
					0.8f,
					0.4f,
					0.8f,
					0.8f,
					0.8f,
					0.8f,
					0.8f
				};
				Class93.Class98.float_3 = new float[]
				{
					-0.8888889f,
					-0.8888889f,
					-0.8888889f,
					-0.6666667f,
					-0.8888889f,
					-0.8888889f,
					-0.444444448f,
					-0.8888889f,
					-0.8888889f,
					-0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0f,
					-0.8888889f,
					-0.8888889f,
					0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0.444444448f,
					-0.8888889f,
					-0.8888889f,
					0.6666667f,
					-0.8888889f,
					-0.8888889f,
					0.8888889f,
					-0.8888889f,
					-0.8888889f,
					-0.8888889f,
					-0.6666667f,
					-0.8888889f,
					-0.6666667f,
					-0.6666667f,
					-0.8888889f,
					-0.444444448f,
					-0.6666667f,
					-0.8888889f,
					-0.222222224f,
					-0.6666667f,
					-0.8888889f,
					0f,
					-0.6666667f,
					-0.8888889f,
					0.222222224f,
					-0.6666667f,
					-0.8888889f,
					0.444444448f,
					-0.6666667f,
					-0.8888889f,
					0.6666667f,
					-0.6666667f,
					-0.8888889f,
					0.8888889f,
					-0.6666667f,
					-0.8888889f,
					-0.8888889f,
					-0.444444448f,
					-0.8888889f,
					-0.6666667f,
					-0.444444448f,
					-0.8888889f,
					-0.444444448f,
					-0.444444448f,
					-0.8888889f,
					-0.222222224f,
					-0.444444448f,
					-0.8888889f,
					0f,
					-0.444444448f,
					-0.8888889f,
					0.222222224f,
					-0.444444448f,
					-0.8888889f,
					0.444444448f,
					-0.444444448f,
					-0.8888889f,
					0.6666667f,
					-0.444444448f,
					-0.8888889f,
					0.8888889f,
					-0.444444448f,
					-0.8888889f,
					-0.8888889f,
					-0.222222224f,
					-0.8888889f,
					-0.6666667f,
					-0.222222224f,
					-0.8888889f,
					-0.444444448f,
					-0.222222224f,
					-0.8888889f,
					-0.222222224f,
					-0.222222224f,
					-0.8888889f,
					0f,
					-0.222222224f,
					-0.8888889f,
					0.222222224f,
					-0.222222224f,
					-0.8888889f,
					0.444444448f,
					-0.222222224f,
					-0.8888889f,
					0.6666667f,
					-0.222222224f,
					-0.8888889f,
					0.8888889f,
					-0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0f,
					-0.8888889f,
					-0.6666667f,
					0f,
					-0.8888889f,
					-0.444444448f,
					0f,
					-0.8888889f,
					-0.222222224f,
					0f,
					-0.8888889f,
					0f,
					0f,
					-0.8888889f,
					0.222222224f,
					0f,
					-0.8888889f,
					0.444444448f,
					0f,
					-0.8888889f,
					0.6666667f,
					0f,
					-0.8888889f,
					0.8888889f,
					0f,
					-0.8888889f,
					-0.8888889f,
					0.222222224f,
					-0.8888889f,
					-0.6666667f,
					0.222222224f,
					-0.8888889f,
					-0.444444448f,
					0.222222224f,
					-0.8888889f,
					-0.222222224f,
					0.222222224f,
					-0.8888889f,
					0f,
					0.222222224f,
					-0.8888889f,
					0.222222224f,
					0.222222224f,
					-0.8888889f,
					0.444444448f,
					0.222222224f,
					-0.8888889f,
					0.6666667f,
					0.222222224f,
					-0.8888889f,
					0.8888889f,
					0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0.444444448f,
					-0.8888889f,
					-0.6666667f,
					0.444444448f,
					-0.8888889f,
					-0.444444448f,
					0.444444448f,
					-0.8888889f,
					-0.222222224f,
					0.444444448f,
					-0.8888889f,
					0f,
					0.444444448f,
					-0.8888889f,
					0.222222224f,
					0.444444448f,
					-0.8888889f,
					0.444444448f,
					0.444444448f,
					-0.8888889f,
					0.6666667f,
					0.444444448f,
					-0.8888889f,
					0.8888889f,
					0.444444448f,
					-0.8888889f,
					-0.8888889f,
					0.6666667f,
					-0.8888889f,
					-0.6666667f,
					0.6666667f,
					-0.8888889f,
					-0.444444448f,
					0.6666667f,
					-0.8888889f,
					-0.222222224f,
					0.6666667f,
					-0.8888889f,
					0f,
					0.6666667f,
					-0.8888889f,
					0.222222224f,
					0.6666667f,
					-0.8888889f,
					0.444444448f,
					0.6666667f,
					-0.8888889f,
					0.6666667f,
					0.6666667f,
					-0.8888889f,
					0.8888889f,
					0.6666667f,
					-0.8888889f,
					-0.8888889f,
					0.8888889f,
					-0.8888889f,
					-0.6666667f,
					0.8888889f,
					-0.8888889f,
					-0.444444448f,
					0.8888889f,
					-0.8888889f,
					-0.222222224f,
					0.8888889f,
					-0.8888889f,
					0f,
					0.8888889f,
					-0.8888889f,
					0.222222224f,
					0.8888889f,
					-0.8888889f,
					0.444444448f,
					0.8888889f,
					-0.8888889f,
					0.6666667f,
					0.8888889f,
					-0.8888889f,
					0.8888889f,
					0.8888889f,
					-0.8888889f,
					-0.8888889f,
					-0.8888889f,
					-0.6666667f,
					-0.6666667f,
					-0.8888889f,
					-0.6666667f,
					-0.444444448f,
					-0.8888889f,
					-0.6666667f,
					-0.222222224f,
					-0.8888889f,
					-0.6666667f,
					0f,
					-0.8888889f,
					-0.6666667f,
					0.222222224f,
					-0.8888889f,
					-0.6666667f,
					0.444444448f,
					-0.8888889f,
					-0.6666667f,
					0.6666667f,
					-0.8888889f,
					-0.6666667f,
					0.8888889f,
					-0.8888889f,
					-0.6666667f,
					-0.8888889f,
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					-0.6666667f,
					-0.444444448f,
					-0.6666667f,
					-0.6666667f,
					-0.222222224f,
					-0.6666667f,
					-0.6666667f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0.222222224f,
					-0.6666667f,
					-0.6666667f,
					0.444444448f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0.8888889f,
					-0.6666667f,
					-0.6666667f,
					-0.8888889f,
					-0.444444448f,
					-0.6666667f,
					-0.6666667f,
					-0.444444448f,
					-0.6666667f,
					-0.444444448f,
					-0.444444448f,
					-0.6666667f,
					-0.222222224f,
					-0.444444448f,
					-0.6666667f,
					0f,
					-0.444444448f,
					-0.6666667f,
					0.222222224f,
					-0.444444448f,
					-0.6666667f,
					0.444444448f,
					-0.444444448f,
					-0.6666667f,
					0.6666667f,
					-0.444444448f,
					-0.6666667f,
					0.8888889f,
					-0.444444448f,
					-0.6666667f,
					-0.8888889f,
					-0.222222224f,
					-0.6666667f,
					-0.6666667f,
					-0.222222224f,
					-0.6666667f,
					-0.444444448f,
					-0.222222224f,
					-0.6666667f,
					-0.222222224f,
					-0.222222224f,
					-0.6666667f,
					0f,
					-0.222222224f,
					-0.6666667f,
					0.222222224f,
					-0.222222224f,
					-0.6666667f,
					0.444444448f,
					-0.222222224f,
					-0.6666667f,
					0.6666667f,
					-0.222222224f,
					-0.6666667f,
					0.8888889f,
					-0.222222224f,
					-0.6666667f,
					-0.8888889f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0f,
					-0.6666667f,
					-0.444444448f,
					0f,
					-0.6666667f,
					-0.222222224f,
					0f,
					-0.6666667f,
					0f,
					0f,
					-0.6666667f,
					0.222222224f,
					0f,
					-0.6666667f,
					0.444444448f,
					0f,
					-0.6666667f,
					0.6666667f,
					0f,
					-0.6666667f,
					0.8888889f,
					0f,
					-0.6666667f,
					-0.8888889f,
					0.222222224f,
					-0.6666667f,
					-0.6666667f,
					0.222222224f,
					-0.6666667f,
					-0.444444448f,
					0.222222224f,
					-0.6666667f,
					-0.222222224f,
					0.222222224f,
					-0.6666667f,
					0f,
					0.222222224f,
					-0.6666667f,
					0.222222224f,
					0.222222224f,
					-0.6666667f,
					0.444444448f,
					0.222222224f,
					-0.6666667f,
					0.6666667f,
					0.222222224f,
					-0.6666667f,
					0.8888889f,
					0.222222224f,
					-0.6666667f,
					-0.8888889f,
					0.444444448f,
					-0.6666667f,
					-0.6666667f,
					0.444444448f,
					-0.6666667f,
					-0.444444448f,
					0.444444448f,
					-0.6666667f,
					-0.222222224f,
					0.444444448f,
					-0.6666667f,
					0f,
					0.444444448f,
					-0.6666667f,
					0.222222224f,
					0.444444448f,
					-0.6666667f,
					0.444444448f,
					0.444444448f,
					-0.6666667f,
					0.6666667f,
					0.444444448f,
					-0.6666667f,
					0.8888889f,
					0.444444448f,
					-0.6666667f,
					-0.8888889f,
					0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					-0.444444448f,
					0.6666667f,
					-0.6666667f,
					-0.222222224f,
					0.6666667f,
					-0.6666667f,
					0f,
					0.6666667f,
					-0.6666667f,
					0.222222224f,
					0.6666667f,
					-0.6666667f,
					0.444444448f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					-0.6666667f,
					0.8888889f,
					0.6666667f,
					-0.6666667f,
					-0.8888889f,
					0.8888889f,
					-0.6666667f,
					-0.6666667f,
					0.8888889f,
					-0.6666667f,
					-0.444444448f,
					0.8888889f,
					-0.6666667f,
					-0.222222224f,
					0.8888889f,
					-0.6666667f,
					0f,
					0.8888889f,
					-0.6666667f,
					0.222222224f,
					0.8888889f,
					-0.6666667f,
					0.444444448f,
					0.8888889f,
					-0.6666667f,
					0.6666667f,
					0.8888889f,
					-0.6666667f,
					0.8888889f,
					0.8888889f,
					-0.6666667f,
					-0.8888889f,
					-0.8888889f,
					-0.444444448f,
					-0.6666667f,
					-0.8888889f,
					-0.444444448f,
					-0.444444448f,
					-0.8888889f,
					-0.444444448f,
					-0.222222224f,
					-0.8888889f,
					-0.444444448f,
					0f,
					-0.8888889f,
					-0.444444448f,
					0.222222224f,
					-0.8888889f,
					-0.444444448f,
					0.444444448f,
					-0.8888889f,
					-0.444444448f,
					0.6666667f,
					-0.8888889f,
					-0.444444448f,
					0.8888889f,
					-0.8888889f,
					-0.444444448f,
					-0.8888889f,
					-0.6666667f,
					-0.444444448f,
					-0.6666667f,
					-0.6666667f,
					-0.444444448f,
					-0.444444448f,
					-0.6666667f,
					-0.444444448f,
					-0.222222224f,
					-0.6666667f,
					-0.444444448f,
					0f,
					-0.6666667f,
					-0.444444448f,
					0.222222224f,
					-0.6666667f,
					-0.444444448f,
					0.444444448f,
					-0.6666667f,
					-0.444444448f,
					0.6666667f,
					-0.6666667f,
					-0.444444448f,
					0.8888889f,
					-0.6666667f,
					-0.444444448f,
					-0.8888889f,
					-0.444444448f,
					-0.444444448f,
					-0.6666667f,
					-0.444444448f,
					-0.444444448f,
					-0.444444448f,
					-0.444444448f,
					-0.444444448f,
					-0.222222224f,
					-0.444444448f,
					-0.444444448f,
					0f,
					-0.444444448f,
					-0.444444448f,
					0.222222224f,
					-0.444444448f,
					-0.444444448f,
					0.444444448f,
					-0.444444448f,
					-0.444444448f,
					0.6666667f,
					-0.444444448f,
					-0.444444448f,
					0.8888889f,
					-0.444444448f,
					-0.444444448f,
					-0.8888889f,
					-0.222222224f,
					-0.444444448f,
					-0.6666667f,
					-0.222222224f,
					-0.444444448f,
					-0.444444448f,
					-0.222222224f,
					-0.444444448f,
					-0.222222224f,
					-0.222222224f,
					-0.444444448f,
					0f,
					-0.222222224f,
					-0.444444448f,
					0.222222224f,
					-0.222222224f,
					-0.444444448f,
					0.444444448f,
					-0.222222224f,
					-0.444444448f,
					0.6666667f,
					-0.222222224f,
					-0.444444448f,
					0.8888889f,
					-0.222222224f,
					-0.444444448f,
					-0.8888889f,
					0f,
					-0.444444448f,
					-0.6666667f,
					0f,
					-0.444444448f,
					-0.444444448f,
					0f,
					-0.444444448f,
					-0.222222224f,
					0f,
					-0.444444448f,
					0f,
					0f,
					-0.444444448f,
					0.222222224f,
					0f,
					-0.444444448f,
					0.444444448f,
					0f,
					-0.444444448f,
					0.6666667f,
					0f,
					-0.444444448f,
					0.8888889f,
					0f,
					-0.444444448f,
					-0.8888889f,
					0.222222224f,
					-0.444444448f,
					-0.6666667f,
					0.222222224f,
					-0.444444448f,
					-0.444444448f,
					0.222222224f,
					-0.444444448f,
					-0.222222224f,
					0.222222224f,
					-0.444444448f,
					0f,
					0.222222224f,
					-0.444444448f,
					0.222222224f,
					0.222222224f,
					-0.444444448f,
					0.444444448f,
					0.222222224f,
					-0.444444448f,
					0.6666667f,
					0.222222224f,
					-0.444444448f,
					0.8888889f,
					0.222222224f,
					-0.444444448f,
					-0.8888889f,
					0.444444448f,
					-0.444444448f,
					-0.6666667f,
					0.444444448f,
					-0.444444448f,
					-0.444444448f,
					0.444444448f,
					-0.444444448f,
					-0.222222224f,
					0.444444448f,
					-0.444444448f,
					0f,
					0.444444448f,
					-0.444444448f,
					0.222222224f,
					0.444444448f,
					-0.444444448f,
					0.444444448f,
					0.444444448f,
					-0.444444448f,
					0.6666667f,
					0.444444448f,
					-0.444444448f,
					0.8888889f,
					0.444444448f,
					-0.444444448f,
					-0.8888889f,
					0.6666667f,
					-0.444444448f,
					-0.6666667f,
					0.6666667f,
					-0.444444448f,
					-0.444444448f,
					0.6666667f,
					-0.444444448f,
					-0.222222224f,
					0.6666667f,
					-0.444444448f,
					0f,
					0.6666667f,
					-0.444444448f,
					0.222222224f,
					0.6666667f,
					-0.444444448f,
					0.444444448f,
					0.6666667f,
					-0.444444448f,
					0.6666667f,
					0.6666667f,
					-0.444444448f,
					0.8888889f,
					0.6666667f,
					-0.444444448f,
					-0.8888889f,
					0.8888889f,
					-0.444444448f,
					-0.6666667f,
					0.8888889f,
					-0.444444448f,
					-0.444444448f,
					0.8888889f,
					-0.444444448f,
					-0.222222224f,
					0.8888889f,
					-0.444444448f,
					0f,
					0.8888889f,
					-0.444444448f,
					0.222222224f,
					0.8888889f,
					-0.444444448f,
					0.444444448f,
					0.8888889f,
					-0.444444448f,
					0.6666667f,
					0.8888889f,
					-0.444444448f,
					0.8888889f,
					0.8888889f,
					-0.444444448f,
					-0.8888889f,
					-0.8888889f,
					-0.222222224f,
					-0.6666667f,
					-0.8888889f,
					-0.222222224f,
					-0.444444448f,
					-0.8888889f,
					-0.222222224f,
					-0.222222224f,
					-0.8888889f,
					-0.222222224f,
					0f,
					-0.8888889f,
					-0.222222224f,
					0.222222224f,
					-0.8888889f,
					-0.222222224f,
					0.444444448f,
					-0.8888889f,
					-0.222222224f,
					0.6666667f,
					-0.8888889f,
					-0.222222224f,
					0.8888889f,
					-0.8888889f,
					-0.222222224f,
					-0.8888889f,
					-0.6666667f,
					-0.222222224f,
					-0.6666667f,
					-0.6666667f,
					-0.222222224f,
					-0.444444448f,
					-0.6666667f,
					-0.222222224f,
					-0.222222224f,
					-0.6666667f,
					-0.222222224f,
					0f,
					-0.6666667f,
					-0.222222224f,
					0.222222224f,
					-0.6666667f,
					-0.222222224f,
					0.444444448f,
					-0.6666667f,
					-0.222222224f,
					0.6666667f,
					-0.6666667f,
					-0.222222224f,
					0.8888889f,
					-0.6666667f,
					-0.222222224f,
					-0.8888889f,
					-0.444444448f,
					-0.222222224f,
					-0.6666667f,
					-0.444444448f,
					-0.222222224f,
					-0.444444448f,
					-0.444444448f,
					-0.222222224f,
					-0.222222224f,
					-0.444444448f,
					-0.222222224f,
					0f,
					-0.444444448f,
					-0.222222224f,
					0.222222224f,
					-0.444444448f,
					-0.222222224f,
					0.444444448f,
					-0.444444448f,
					-0.222222224f,
					0.6666667f,
					-0.444444448f,
					-0.222222224f,
					0.8888889f,
					-0.444444448f,
					-0.222222224f,
					-0.8888889f,
					-0.222222224f,
					-0.222222224f,
					-0.6666667f,
					-0.222222224f,
					-0.222222224f,
					-0.444444448f,
					-0.222222224f,
					-0.222222224f,
					-0.222222224f,
					-0.222222224f,
					-0.222222224f,
					0f,
					-0.222222224f,
					-0.222222224f,
					0.222222224f,
					-0.222222224f,
					-0.222222224f,
					0.444444448f,
					-0.222222224f,
					-0.222222224f,
					0.6666667f,
					-0.222222224f,
					-0.222222224f,
					0.8888889f,
					-0.222222224f,
					-0.222222224f,
					-0.8888889f,
					0f,
					-0.222222224f,
					-0.6666667f,
					0f,
					-0.222222224f,
					-0.444444448f,
					0f,
					-0.222222224f,
					-0.222222224f,
					0f,
					-0.222222224f,
					0f,
					0f,
					-0.222222224f,
					0.222222224f,
					0f,
					-0.222222224f,
					0.444444448f,
					0f,
					-0.222222224f,
					0.6666667f,
					0f,
					-0.222222224f,
					0.8888889f,
					0f,
					-0.222222224f,
					-0.8888889f,
					0.222222224f,
					-0.222222224f,
					-0.6666667f,
					0.222222224f,
					-0.222222224f,
					-0.444444448f,
					0.222222224f,
					-0.222222224f,
					-0.222222224f,
					0.222222224f,
					-0.222222224f,
					0f,
					0.222222224f,
					-0.222222224f,
					0.222222224f,
					0.222222224f,
					-0.222222224f,
					0.444444448f,
					0.222222224f,
					-0.222222224f,
					0.6666667f,
					0.222222224f,
					-0.222222224f,
					0.8888889f,
					0.222222224f,
					-0.222222224f,
					-0.8888889f,
					0.444444448f,
					-0.222222224f,
					-0.6666667f,
					0.444444448f,
					-0.222222224f,
					-0.444444448f,
					0.444444448f,
					-0.222222224f,
					-0.222222224f,
					0.444444448f,
					-0.222222224f,
					0f,
					0.444444448f,
					-0.222222224f,
					0.222222224f,
					0.444444448f,
					-0.222222224f,
					0.444444448f,
					0.444444448f,
					-0.222222224f,
					0.6666667f,
					0.444444448f,
					-0.222222224f,
					0.8888889f,
					0.444444448f,
					-0.222222224f,
					-0.8888889f,
					0.6666667f,
					-0.222222224f,
					-0.6666667f,
					0.6666667f,
					-0.222222224f,
					-0.444444448f,
					0.6666667f,
					-0.222222224f,
					-0.222222224f,
					0.6666667f,
					-0.222222224f,
					0f,
					0.6666667f,
					-0.222222224f,
					0.222222224f,
					0.6666667f,
					-0.222222224f,
					0.444444448f,
					0.6666667f,
					-0.222222224f,
					0.6666667f,
					0.6666667f,
					-0.222222224f,
					0.8888889f,
					0.6666667f,
					-0.222222224f,
					-0.8888889f,
					0.8888889f,
					-0.222222224f,
					-0.6666667f,
					0.8888889f,
					-0.222222224f,
					-0.444444448f,
					0.8888889f,
					-0.222222224f,
					-0.222222224f,
					0.8888889f,
					-0.222222224f,
					0f,
					0.8888889f,
					-0.222222224f,
					0.222222224f,
					0.8888889f,
					-0.222222224f,
					0.444444448f,
					0.8888889f,
					-0.222222224f,
					0.6666667f,
					0.8888889f,
					-0.222222224f,
					0.8888889f,
					0.8888889f,
					-0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0f,
					-0.6666667f,
					-0.8888889f,
					0f,
					-0.444444448f,
					-0.8888889f,
					0f,
					-0.222222224f,
					-0.8888889f,
					0f,
					0f,
					-0.8888889f,
					0f,
					0.222222224f,
					-0.8888889f,
					0f,
					0.444444448f,
					-0.8888889f,
					0f,
					0.6666667f,
					-0.8888889f,
					0f,
					0.8888889f,
					-0.8888889f,
					0f,
					-0.8888889f,
					-0.6666667f,
					0f,
					-0.6666667f,
					-0.6666667f,
					0f,
					-0.444444448f,
					-0.6666667f,
					0f,
					-0.222222224f,
					-0.6666667f,
					0f,
					0f,
					-0.6666667f,
					0f,
					0.222222224f,
					-0.6666667f,
					0f,
					0.444444448f,
					-0.6666667f,
					0f,
					0.6666667f,
					-0.6666667f,
					0f,
					0.8888889f,
					-0.6666667f,
					0f,
					-0.8888889f,
					-0.444444448f,
					0f,
					-0.6666667f,
					-0.444444448f,
					0f,
					-0.444444448f,
					-0.444444448f,
					0f,
					-0.222222224f,
					-0.444444448f,
					0f,
					0f,
					-0.444444448f,
					0f,
					0.222222224f,
					-0.444444448f,
					0f,
					0.444444448f,
					-0.444444448f,
					0f,
					0.6666667f,
					-0.444444448f,
					0f,
					0.8888889f,
					-0.444444448f,
					0f,
					-0.8888889f,
					-0.222222224f,
					0f,
					-0.6666667f,
					-0.222222224f,
					0f,
					-0.444444448f,
					-0.222222224f,
					0f,
					-0.222222224f,
					-0.222222224f,
					0f,
					0f,
					-0.222222224f,
					0f,
					0.222222224f,
					-0.222222224f,
					0f,
					0.444444448f,
					-0.222222224f,
					0f,
					0.6666667f,
					-0.222222224f,
					0f,
					0.8888889f,
					-0.222222224f,
					0f,
					-0.8888889f,
					0f,
					0f,
					-0.6666667f,
					0f,
					0f,
					-0.444444448f,
					0f,
					0f,
					-0.222222224f,
					0f,
					0f,
					0f,
					0f,
					0f,
					0.222222224f,
					0f,
					0f,
					0.444444448f,
					0f,
					0f,
					0.6666667f,
					0f,
					0f,
					0.8888889f,
					0f,
					0f,
					-0.8888889f,
					0.222222224f,
					0f,
					-0.6666667f,
					0.222222224f,
					0f,
					-0.444444448f,
					0.222222224f,
					0f,
					-0.222222224f,
					0.222222224f,
					0f,
					0f,
					0.222222224f,
					0f,
					0.222222224f,
					0.222222224f,
					0f,
					0.444444448f,
					0.222222224f,
					0f,
					0.6666667f,
					0.222222224f,
					0f,
					0.8888889f,
					0.222222224f,
					0f,
					-0.8888889f,
					0.444444448f,
					0f,
					-0.6666667f,
					0.444444448f,
					0f,
					-0.444444448f,
					0.444444448f,
					0f,
					-0.222222224f,
					0.444444448f,
					0f,
					0f,
					0.444444448f,
					0f,
					0.222222224f,
					0.444444448f,
					0f,
					0.444444448f,
					0.444444448f,
					0f,
					0.6666667f,
					0.444444448f,
					0f,
					0.8888889f,
					0.444444448f,
					0f,
					-0.8888889f,
					0.6666667f,
					0f,
					-0.6666667f,
					0.6666667f,
					0f,
					-0.444444448f,
					0.6666667f,
					0f,
					-0.222222224f,
					0.6666667f,
					0f,
					0f,
					0.6666667f,
					0f,
					0.222222224f,
					0.6666667f,
					0f,
					0.444444448f,
					0.6666667f,
					0f,
					0.6666667f,
					0.6666667f,
					0f,
					0.8888889f,
					0.6666667f,
					0f,
					-0.8888889f,
					0.8888889f,
					0f,
					-0.6666667f,
					0.8888889f,
					0f,
					-0.444444448f,
					0.8888889f,
					0f,
					-0.222222224f,
					0.8888889f,
					0f,
					0f,
					0.8888889f,
					0f,
					0.222222224f,
					0.8888889f,
					0f,
					0.444444448f,
					0.8888889f,
					0f,
					0.6666667f,
					0.8888889f,
					0f,
					0.8888889f,
					0.8888889f,
					0f,
					-0.8888889f,
					-0.8888889f,
					0.222222224f,
					-0.6666667f,
					-0.8888889f,
					0.222222224f,
					-0.444444448f,
					-0.8888889f,
					0.222222224f,
					-0.222222224f,
					-0.8888889f,
					0.222222224f,
					0f,
					-0.8888889f,
					0.222222224f,
					0.222222224f,
					-0.8888889f,
					0.222222224f,
					0.444444448f,
					-0.8888889f,
					0.222222224f,
					0.6666667f,
					-0.8888889f,
					0.222222224f,
					0.8888889f,
					-0.8888889f,
					0.222222224f,
					-0.8888889f,
					-0.6666667f,
					0.222222224f,
					-0.6666667f,
					-0.6666667f,
					0.222222224f,
					-0.444444448f,
					-0.6666667f,
					0.222222224f,
					-0.222222224f,
					-0.6666667f,
					0.222222224f,
					0f,
					-0.6666667f,
					0.222222224f,
					0.222222224f,
					-0.6666667f,
					0.222222224f,
					0.444444448f,
					-0.6666667f,
					0.222222224f,
					0.6666667f,
					-0.6666667f,
					0.222222224f,
					0.8888889f,
					-0.6666667f,
					0.222222224f,
					-0.8888889f,
					-0.444444448f,
					0.222222224f,
					-0.6666667f,
					-0.444444448f,
					0.222222224f,
					-0.444444448f,
					-0.444444448f,
					0.222222224f,
					-0.222222224f,
					-0.444444448f,
					0.222222224f,
					0f,
					-0.444444448f,
					0.222222224f,
					0.222222224f,
					-0.444444448f,
					0.222222224f,
					0.444444448f,
					-0.444444448f,
					0.222222224f,
					0.6666667f,
					-0.444444448f,
					0.222222224f,
					0.8888889f,
					-0.444444448f,
					0.222222224f,
					-0.8888889f,
					-0.222222224f,
					0.222222224f,
					-0.6666667f,
					-0.222222224f,
					0.222222224f,
					-0.444444448f,
					-0.222222224f,
					0.222222224f,
					-0.222222224f,
					-0.222222224f,
					0.222222224f,
					0f,
					-0.222222224f,
					0.222222224f,
					0.222222224f,
					-0.222222224f,
					0.222222224f,
					0.444444448f,
					-0.222222224f,
					0.222222224f,
					0.6666667f,
					-0.222222224f,
					0.222222224f,
					0.8888889f,
					-0.222222224f,
					0.222222224f,
					-0.8888889f,
					0f,
					0.222222224f,
					-0.6666667f,
					0f,
					0.222222224f,
					-0.444444448f,
					0f,
					0.222222224f,
					-0.222222224f,
					0f,
					0.222222224f,
					0f,
					0f,
					0.222222224f,
					0.222222224f,
					0f,
					0.222222224f,
					0.444444448f,
					0f,
					0.222222224f,
					0.6666667f,
					0f,
					0.222222224f,
					0.8888889f,
					0f,
					0.222222224f,
					-0.8888889f,
					0.222222224f,
					0.222222224f,
					-0.6666667f,
					0.222222224f,
					0.222222224f,
					-0.444444448f,
					0.222222224f,
					0.222222224f,
					-0.222222224f,
					0.222222224f,
					0.222222224f,
					0f,
					0.222222224f,
					0.222222224f,
					0.222222224f,
					0.222222224f,
					0.222222224f,
					0.444444448f,
					0.222222224f,
					0.222222224f,
					0.6666667f,
					0.222222224f,
					0.222222224f,
					0.8888889f,
					0.222222224f,
					0.222222224f,
					-0.8888889f,
					0.444444448f,
					0.222222224f,
					-0.6666667f,
					0.444444448f,
					0.222222224f,
					-0.444444448f,
					0.444444448f,
					0.222222224f,
					-0.222222224f,
					0.444444448f,
					0.222222224f,
					0f,
					0.444444448f,
					0.222222224f,
					0.222222224f,
					0.444444448f,
					0.222222224f,
					0.444444448f,
					0.444444448f,
					0.222222224f,
					0.6666667f,
					0.444444448f,
					0.222222224f,
					0.8888889f,
					0.444444448f,
					0.222222224f,
					-0.8888889f,
					0.6666667f,
					0.222222224f,
					-0.6666667f,
					0.6666667f,
					0.222222224f,
					-0.444444448f,
					0.6666667f,
					0.222222224f,
					-0.222222224f,
					0.6666667f,
					0.222222224f,
					0f,
					0.6666667f,
					0.222222224f,
					0.222222224f,
					0.6666667f,
					0.222222224f,
					0.444444448f,
					0.6666667f,
					0.222222224f,
					0.6666667f,
					0.6666667f,
					0.222222224f,
					0.8888889f,
					0.6666667f,
					0.222222224f,
					-0.8888889f,
					0.8888889f,
					0.222222224f,
					-0.6666667f,
					0.8888889f,
					0.222222224f,
					-0.444444448f,
					0.8888889f,
					0.222222224f,
					-0.222222224f,
					0.8888889f,
					0.222222224f,
					0f,
					0.8888889f,
					0.222222224f,
					0.222222224f,
					0.8888889f,
					0.222222224f,
					0.444444448f,
					0.8888889f,
					0.222222224f,
					0.6666667f,
					0.8888889f,
					0.222222224f,
					0.8888889f,
					0.8888889f,
					0.222222224f,
					-0.8888889f,
					-0.8888889f,
					0.444444448f,
					-0.6666667f,
					-0.8888889f,
					0.444444448f,
					-0.444444448f,
					-0.8888889f,
					0.444444448f,
					-0.222222224f,
					-0.8888889f,
					0.444444448f,
					0f,
					-0.8888889f,
					0.444444448f,
					0.222222224f,
					-0.8888889f,
					0.444444448f,
					0.444444448f,
					-0.8888889f,
					0.444444448f,
					0.6666667f,
					-0.8888889f,
					0.444444448f,
					0.8888889f,
					-0.8888889f,
					0.444444448f,
					-0.8888889f,
					-0.6666667f,
					0.444444448f,
					-0.6666667f,
					-0.6666667f,
					0.444444448f,
					-0.444444448f,
					-0.6666667f,
					0.444444448f,
					-0.222222224f,
					-0.6666667f,
					0.444444448f,
					0f,
					-0.6666667f,
					0.444444448f,
					0.222222224f,
					-0.6666667f,
					0.444444448f,
					0.444444448f,
					-0.6666667f,
					0.444444448f,
					0.6666667f,
					-0.6666667f,
					0.444444448f,
					0.8888889f,
					-0.6666667f,
					0.444444448f,
					-0.8888889f,
					-0.444444448f,
					0.444444448f,
					-0.6666667f,
					-0.444444448f,
					0.444444448f,
					-0.444444448f,
					-0.444444448f,
					0.444444448f,
					-0.222222224f,
					-0.444444448f,
					0.444444448f,
					0f,
					-0.444444448f,
					0.444444448f,
					0.222222224f,
					-0.444444448f,
					0.444444448f,
					0.444444448f,
					-0.444444448f,
					0.444444448f,
					0.6666667f,
					-0.444444448f,
					0.444444448f,
					0.8888889f,
					-0.444444448f,
					0.444444448f,
					-0.8888889f,
					-0.222222224f,
					0.444444448f,
					-0.6666667f,
					-0.222222224f,
					0.444444448f,
					-0.444444448f,
					-0.222222224f,
					0.444444448f,
					-0.222222224f,
					-0.222222224f,
					0.444444448f,
					0f,
					-0.222222224f,
					0.444444448f,
					0.222222224f,
					-0.222222224f,
					0.444444448f,
					0.444444448f,
					-0.222222224f,
					0.444444448f,
					0.6666667f,
					-0.222222224f,
					0.444444448f,
					0.8888889f,
					-0.222222224f,
					0.444444448f,
					-0.8888889f,
					0f,
					0.444444448f,
					-0.6666667f,
					0f,
					0.444444448f,
					-0.444444448f,
					0f,
					0.444444448f,
					-0.222222224f,
					0f,
					0.444444448f,
					0f,
					0f,
					0.444444448f,
					0.222222224f,
					0f,
					0.444444448f,
					0.444444448f,
					0f,
					0.444444448f,
					0.6666667f,
					0f,
					0.444444448f,
					0.8888889f,
					0f,
					0.444444448f,
					-0.8888889f,
					0.222222224f,
					0.444444448f,
					-0.6666667f,
					0.222222224f,
					0.444444448f,
					-0.444444448f,
					0.222222224f,
					0.444444448f,
					-0.222222224f,
					0.222222224f,
					0.444444448f,
					0f,
					0.222222224f,
					0.444444448f,
					0.222222224f,
					0.222222224f,
					0.444444448f,
					0.444444448f,
					0.222222224f,
					0.444444448f,
					0.6666667f,
					0.222222224f,
					0.444444448f,
					0.8888889f,
					0.222222224f,
					0.444444448f,
					-0.8888889f,
					0.444444448f,
					0.444444448f,
					-0.6666667f,
					0.444444448f,
					0.444444448f,
					-0.444444448f,
					0.444444448f,
					0.444444448f,
					-0.222222224f,
					0.444444448f,
					0.444444448f,
					0f,
					0.444444448f,
					0.444444448f,
					0.222222224f,
					0.444444448f,
					0.444444448f,
					0.444444448f,
					0.444444448f,
					0.444444448f,
					0.6666667f,
					0.444444448f,
					0.444444448f,
					0.8888889f,
					0.444444448f,
					0.444444448f,
					-0.8888889f,
					0.6666667f,
					0.444444448f,
					-0.6666667f,
					0.6666667f,
					0.444444448f,
					-0.444444448f,
					0.6666667f,
					0.444444448f,
					-0.222222224f,
					0.6666667f,
					0.444444448f,
					0f,
					0.6666667f,
					0.444444448f,
					0.222222224f,
					0.6666667f,
					0.444444448f,
					0.444444448f,
					0.6666667f,
					0.444444448f,
					0.6666667f,
					0.6666667f,
					0.444444448f,
					0.8888889f,
					0.6666667f,
					0.444444448f,
					-0.8888889f,
					0.8888889f,
					0.444444448f,
					-0.6666667f,
					0.8888889f,
					0.444444448f,
					-0.444444448f,
					0.8888889f,
					0.444444448f,
					-0.222222224f,
					0.8888889f,
					0.444444448f,
					0f,
					0.8888889f,
					0.444444448f,
					0.222222224f,
					0.8888889f,
					0.444444448f,
					0.444444448f,
					0.8888889f,
					0.444444448f,
					0.6666667f,
					0.8888889f,
					0.444444448f,
					0.8888889f,
					0.8888889f,
					0.444444448f,
					-0.8888889f,
					-0.8888889f,
					0.6666667f,
					-0.6666667f,
					-0.8888889f,
					0.6666667f,
					-0.444444448f,
					-0.8888889f,
					0.6666667f,
					-0.222222224f,
					-0.8888889f,
					0.6666667f,
					0f,
					-0.8888889f,
					0.6666667f,
					0.222222224f,
					-0.8888889f,
					0.6666667f,
					0.444444448f,
					-0.8888889f,
					0.6666667f,
					0.6666667f,
					-0.8888889f,
					0.6666667f,
					0.8888889f,
					-0.8888889f,
					0.6666667f,
					-0.8888889f,
					-0.6666667f,
					0.6666667f,
					-0.6666667f,
					-0.6666667f,
					0.6666667f,
					-0.444444448f,
					-0.6666667f,
					0.6666667f,
					-0.222222224f,
					-0.6666667f,
					0.6666667f,
					0f,
					-0.6666667f,
					0.6666667f,
					0.222222224f,
					-0.6666667f,
					0.6666667f,
					0.444444448f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					0.8888889f,
					-0.6666667f,
					0.6666667f,
					-0.8888889f,
					-0.444444448f,
					0.6666667f,
					-0.6666667f,
					-0.444444448f,
					0.6666667f,
					-0.444444448f,
					-0.444444448f,
					0.6666667f,
					-0.222222224f,
					-0.444444448f,
					0.6666667f,
					0f,
					-0.444444448f,
					0.6666667f,
					0.222222224f,
					-0.444444448f,
					0.6666667f,
					0.444444448f,
					-0.444444448f,
					0.6666667f,
					0.6666667f,
					-0.444444448f,
					0.6666667f,
					0.8888889f,
					-0.444444448f,
					0.6666667f,
					-0.8888889f,
					-0.222222224f,
					0.6666667f,
					-0.6666667f,
					-0.222222224f,
					0.6666667f,
					-0.444444448f,
					-0.222222224f,
					0.6666667f,
					-0.222222224f,
					-0.222222224f,
					0.6666667f,
					0f,
					-0.222222224f,
					0.6666667f,
					0.222222224f,
					-0.222222224f,
					0.6666667f,
					0.444444448f,
					-0.222222224f,
					0.6666667f,
					0.6666667f,
					-0.222222224f,
					0.6666667f,
					0.8888889f,
					-0.222222224f,
					0.6666667f,
					-0.8888889f,
					0f,
					0.6666667f,
					-0.6666667f,
					0f,
					0.6666667f,
					-0.444444448f,
					0f,
					0.6666667f,
					-0.222222224f,
					0f,
					0.6666667f,
					0f,
					0f,
					0.6666667f,
					0.222222224f,
					0f,
					0.6666667f,
					0.444444448f,
					0f,
					0.6666667f,
					0.6666667f,
					0f,
					0.6666667f,
					0.8888889f,
					0f,
					0.6666667f,
					-0.8888889f,
					0.222222224f,
					0.6666667f,
					-0.6666667f,
					0.222222224f,
					0.6666667f,
					-0.444444448f,
					0.222222224f,
					0.6666667f,
					-0.222222224f,
					0.222222224f,
					0.6666667f,
					0f,
					0.222222224f,
					0.6666667f,
					0.222222224f,
					0.222222224f,
					0.6666667f,
					0.444444448f,
					0.222222224f,
					0.6666667f,
					0.6666667f,
					0.222222224f,
					0.6666667f,
					0.8888889f,
					0.222222224f,
					0.6666667f,
					-0.8888889f,
					0.444444448f,
					0.6666667f,
					-0.6666667f,
					0.444444448f,
					0.6666667f,
					-0.444444448f,
					0.444444448f,
					0.6666667f,
					-0.222222224f,
					0.444444448f,
					0.6666667f,
					0f,
					0.444444448f,
					0.6666667f,
					0.222222224f,
					0.444444448f,
					0.6666667f,
					0.444444448f,
					0.444444448f,
					0.6666667f,
					0.6666667f,
					0.444444448f,
					0.6666667f,
					0.8888889f,
					0.444444448f,
					0.6666667f,
					-0.8888889f,
					0.6666667f,
					0.6666667f,
					-0.6666667f,
					0.6666667f,
					0.6666667f,
					-0.444444448f,
					0.6666667f,
					0.6666667f,
					-0.222222224f,
					0.6666667f,
					0.6666667f,
					0f,
					0.6666667f,
					0.6666667f,
					0.222222224f,
					0.6666667f,
					0.6666667f,
					0.444444448f,
					0.6666667f,
					0.6666667f,
					0.6666667f,
					0.6666667f,
					0.6666667f,
					0.8888889f,
					0.6666667f,
					0.6666667f,
					-0.8888889f,
					0.8888889f,
					0.6666667f,
					-0.6666667f,
					0.8888889f,
					0.6666667f,
					-0.444444448f,
					0.8888889f,
					0.6666667f,
					-0.222222224f,
					0.8888889f,
					0.6666667f,
					0f,
					0.8888889f,
					0.6666667f,
					0.222222224f,
					0.8888889f,
					0.6666667f,
					0.444444448f,
					0.8888889f,
					0.6666667f,
					0.6666667f,
					0.8888889f,
					0.6666667f,
					0.8888889f,
					0.8888889f,
					0.6666667f,
					-0.8888889f,
					-0.8888889f,
					0.8888889f,
					-0.6666667f,
					-0.8888889f,
					0.8888889f,
					-0.444444448f,
					-0.8888889f,
					0.8888889f,
					-0.222222224f,
					-0.8888889f,
					0.8888889f,
					0f,
					-0.8888889f,
					0.8888889f,
					0.222222224f,
					-0.8888889f,
					0.8888889f,
					0.444444448f,
					-0.8888889f,
					0.8888889f,
					0.6666667f,
					-0.8888889f,
					0.8888889f,
					0.8888889f,
					-0.8888889f,
					0.8888889f,
					-0.8888889f,
					-0.6666667f,
					0.8888889f,
					-0.6666667f,
					-0.6666667f,
					0.8888889f,
					-0.444444448f,
					-0.6666667f,
					0.8888889f,
					-0.222222224f,
					-0.6666667f,
					0.8888889f,
					0f,
					-0.6666667f,
					0.8888889f,
					0.222222224f,
					-0.6666667f,
					0.8888889f,
					0.444444448f,
					-0.6666667f,
					0.8888889f,
					0.6666667f,
					-0.6666667f,
					0.8888889f,
					0.8888889f,
					-0.6666667f,
					0.8888889f,
					-0.8888889f,
					-0.444444448f,
					0.8888889f,
					-0.6666667f,
					-0.444444448f,
					0.8888889f,
					-0.444444448f,
					-0.444444448f,
					0.8888889f,
					-0.222222224f,
					-0.444444448f,
					0.8888889f,
					0f,
					-0.444444448f,
					0.8888889f,
					0.222222224f,
					-0.444444448f,
					0.8888889f,
					0.444444448f,
					-0.444444448f,
					0.8888889f,
					0.6666667f,
					-0.444444448f,
					0.8888889f,
					0.8888889f,
					-0.444444448f,
					0.8888889f,
					-0.8888889f,
					-0.222222224f,
					0.8888889f,
					-0.6666667f,
					-0.222222224f,
					0.8888889f,
					-0.444444448f,
					-0.222222224f,
					0.8888889f,
					-0.222222224f,
					-0.222222224f,
					0.8888889f,
					0f,
					-0.222222224f,
					0.8888889f,
					0.222222224f,
					-0.222222224f,
					0.8888889f,
					0.444444448f,
					-0.222222224f,
					0.8888889f,
					0.6666667f,
					-0.222222224f,
					0.8888889f,
					0.8888889f,
					-0.222222224f,
					0.8888889f,
					-0.8888889f,
					0f,
					0.8888889f,
					-0.6666667f,
					0f,
					0.8888889f,
					-0.444444448f,
					0f,
					0.8888889f,
					-0.222222224f,
					0f,
					0.8888889f,
					0f,
					0f,
					0.8888889f,
					0.222222224f,
					0f,
					0.8888889f,
					0.444444448f,
					0f,
					0.8888889f,
					0.6666667f,
					0f,
					0.8888889f,
					0.8888889f,
					0f,
					0.8888889f,
					-0.8888889f,
					0.222222224f,
					0.8888889f,
					-0.6666667f,
					0.222222224f,
					0.8888889f,
					-0.444444448f,
					0.222222224f,
					0.8888889f,
					-0.222222224f,
					0.222222224f,
					0.8888889f,
					0f,
					0.222222224f,
					0.8888889f,
					0.222222224f,
					0.222222224f,
					0.8888889f,
					0.444444448f,
					0.222222224f,
					0.8888889f,
					0.6666667f,
					0.222222224f,
					0.8888889f,
					0.8888889f,
					0.222222224f,
					0.8888889f,
					-0.8888889f,
					0.444444448f,
					0.8888889f,
					-0.6666667f,
					0.444444448f,
					0.8888889f,
					-0.444444448f,
					0.444444448f,
					0.8888889f,
					-0.222222224f,
					0.444444448f,
					0.8888889f,
					0f,
					0.444444448f,
					0.8888889f,
					0.222222224f,
					0.444444448f,
					0.8888889f,
					0.444444448f,
					0.444444448f,
					0.8888889f,
					0.6666667f,
					0.444444448f,
					0.8888889f,
					0.8888889f,
					0.444444448f,
					0.8888889f,
					-0.8888889f,
					0.6666667f,
					0.8888889f,
					-0.6666667f,
					0.6666667f,
					0.8888889f,
					-0.444444448f,
					0.6666667f,
					0.8888889f,
					-0.222222224f,
					0.6666667f,
					0.8888889f,
					0f,
					0.6666667f,
					0.8888889f,
					0.222222224f,
					0.6666667f,
					0.8888889f,
					0.444444448f,
					0.6666667f,
					0.8888889f,
					0.6666667f,
					0.6666667f,
					0.8888889f,
					0.8888889f,
					0.6666667f,
					0.8888889f,
					-0.8888889f,
					0.8888889f,
					0.8888889f,
					-0.6666667f,
					0.8888889f,
					0.8888889f,
					-0.444444448f,
					0.8888889f,
					0.8888889f,
					-0.222222224f,
					0.8888889f,
					0.8888889f,
					0f,
					0.8888889f,
					0.8888889f,
					0.222222224f,
					0.8888889f,
					0.8888889f,
					0.444444448f,
					0.8888889f,
					0.8888889f,
					0.6666667f,
					0.8888889f,
					0.8888889f,
					0.8888889f,
					0.8888889f,
					0.8888889f
				};
				Class93.Class98.int_0 = new int[]
				{
					0,
					5,
					3,
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15,
					16
				};
				Class93.Class98.float_5 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					0.000122070313f,
					6.10351563E-05f,
					3.05175781E-05f
				};
				Class93.Class98.float_6 = new float[]
				{
					0f,
					1.33333337f,
					1.14285719f,
					1.06666672f,
					1.032258f,
					1.01587307f,
					1.007874f,
					1.00392163f,
					1.00195694f,
					1.00097752f,
					1.00048852f,
					1.00024426f,
					1.00012207f,
					1.000061f,
					1.00003052f,
					1.00001526f
				};
				Class93.Class98.float_7 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					0.000122070313f,
					6.103516E-05f,
					3.051758E-05f
				};
				Class93.Class98.int_1 = new int[]
				{
					0,
					5,
					7,
					3,
					10,
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					16
				};
				Class93.Class98.float_9 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					0.25f,
					0.125f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					3.05175781E-05f
				};
				Class93.Class98.float_10 = new float[]
				{
					0f,
					1.33333337f,
					1.6f,
					1.14285719f,
					1.77777779f,
					1.06666672f,
					1.032258f,
					1.01587307f,
					1.007874f,
					1.00392163f,
					1.00195694f,
					1.00097752f,
					1.00048852f,
					1.00024426f,
					1.00012207f,
					1.00001526f
				};
				Class93.Class98.float_11 = new float[]
				{
					0f,
					0.5f,
					0.5f,
					0.25f,
					0.5f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					3.051758E-05f
				};
				Class93.Class98.int_2 = new int[]
				{
					0,
					5,
					7,
					3,
					10,
					4,
					5,
					16
				};
				Class93.Class98.float_12 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					0.25f,
					0.125f,
					0.125f,
					0.0625f,
					3.05175781E-05f
				};
				Class93.Class98.float_13 = new float[]
				{
					0f,
					1.33333337f,
					1.6f,
					1.14285719f,
					1.77777779f,
					1.06666672f,
					1.032258f,
					1.00001526f
				};
				Class93.Class98.float_14 = new float[]
				{
					0f,
					0.5f,
					0.5f,
					0.25f,
					0.5f,
					0.125f,
					0.0625f,
					3.051758E-05f
				};
				Class93.Class98.int_3 = new int[]
				{
					0,
					5,
					7,
					16
				};
				Class93.Class98.float_15 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					3.05175781E-05f
				};
				Class93.Class98.float_16 = new float[]
				{
					0f,
					1.33333337f,
					1.6f,
					1.00001526f
				};
				Class93.Class98.float_17 = new float[]
				{
					0f,
					0.5f,
					0.5f,
					3.051758E-05f
				};
				Class93.Class98.int_4 = new int[]
				{
					0,
					5,
					7,
					10,
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15
				};
				Class93.Class98.float_19 = new float[]
				{
					0f,
					0.5f,
					0.25f,
					0.125f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					0.000122070313f,
					6.10351563E-05f
				};
				Class93.Class98.float_20 = new float[]
				{
					0f,
					1.33333337f,
					1.6f,
					1.77777779f,
					1.06666672f,
					1.032258f,
					1.01587307f,
					1.007874f,
					1.00392163f,
					1.00195694f,
					1.00097752f,
					1.00048852f,
					1.00024426f,
					1.00012207f,
					1.000061f,
					1.00003052f
				};
				Class93.Class98.float_21 = new float[]
				{
					0f,
					0.5f,
					0.5f,
					0.5f,
					0.125f,
					0.0625f,
					0.03125f,
					0.015625f,
					0.0078125f,
					0.00390625f,
					0.001953125f,
					0.0009765625f,
					0.00048828125f,
					0.000244140625f,
					0.000122070313f,
					6.103516E-05f
				};
				float[][] array = new float[16][];
				array[1] = Class93.Class98.float_1;
				Class93.Class98.float_4 = array;
				float[][] array2 = new float[16][];
				array2[1] = Class93.Class98.float_1;
				array2[2] = Class93.Class98.float_2;
				array2[4] = Class93.Class98.float_3;
				Class93.Class98.float_8 = array2;
				float[][] array3 = new float[16][];
				array3[1] = Class93.Class98.float_1;
				array3[2] = Class93.Class98.float_2;
				array3[3] = Class93.Class98.float_3;
				Class93.Class98.float_18 = array3;
			}
		}

		public class Class99 : Class93.Class98
		{
			public int int_11;

			public float float_30;

			public float float_31;

			public float float_32;

			public Class99(int int_12) : base(int_12)
			{
			}

			public override void vmethod_0(Class82 class82_0, zzSoundClass class107_0, Class101 class101_0)
			{
				base.vmethod_0(class82_0, class107_0, class101_0);
			}

			public override void vmethod_6(Class82 class82_0, Class101 class101_0)
			{
				if (this.int_6 == 0)
				{
					return;
				}
				this.int_7 = class82_0.method_13(2);
				this.int_11 = class82_0.method_13(2);
				if (class101_0 != null)
				{
					class101_0.method_0(this.int_7, 2);
					class101_0.method_0(this.int_11, 2);
				}
			}

			public override void vmethod_1(Class82 class82_0, zzSoundClass class107_0)
			{
				if (this.int_6 == 0)
				{
					return;
				}
				base.vmethod_1(class82_0, class107_0);
				switch (this.int_11)
				{
				case 0:
					this.float_30 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_31 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)];
					return;
				case 1:
					this.float_30 = (this.float_31 = Class92.Class94.float_0[class82_0.method_13(6)]);
					this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)];
					return;
				case 2:
					this.float_30 = (this.float_31 = (this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)]));
					return;
				case 3:
					this.float_30 = Class92.Class94.float_0[class82_0.method_13(6)];
					this.float_31 = (this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)]);
					return;
				default:
					return;
				}
			}

			public override bool vmethod_2(Class82 class82_0)
			{
				return base.vmethod_2(class82_0);
			}

			public override bool vmethod_3(Enum4 enum4_0, Class80 class80_0, Class80 class80_1)
			{
				if (this.int_6 != 0)
				{
					float num = this.float_27[this.int_10];
					if (this.float_25[0] == null)
					{
						num = (num + this.float_29[0]) * this.float_28[0];
					}
					if (enum4_0 == Enum4.const_0)
					{
						float num2 = num;
						if (this.int_9 <= 4)
						{
							num *= this.float_22;
							num2 *= this.float_30;
						}
						else if (this.int_9 <= 8)
						{
							num *= this.float_23;
							num2 *= this.float_31;
						}
						else
						{
							num *= this.float_24;
							num2 *= this.float_32;
						}
						class80_0.method_2(num, this.int_5);
						class80_1.method_2(num2, this.int_5);
					}
					else if (enum4_0 == Enum4.const_1)
					{
						if (this.int_9 <= 4)
						{
							num *= this.float_22;
						}
						else if (this.int_9 <= 8)
						{
							num *= this.float_23;
						}
						else
						{
							num *= this.float_24;
						}
						class80_0.method_2(num, this.int_5);
					}
					else
					{
						if (this.int_9 <= 4)
						{
							num *= this.float_30;
						}
						else if (this.int_9 <= 8)
						{
							num *= this.float_31;
						}
						else
						{
							num *= this.float_32;
						}
						class80_0.method_2(num, this.int_5);
					}
				}
				return ++this.int_10 == 3;
			}
		}

		public class Class100 : Class93.Class98
		{
			public int int_11;

			public int int_12;

			public float float_30;

			public float float_31;

			public float float_32;

			public int[] int_13;

			public float[] float_33;

			public float[] float_34;

			public float[] float_35;

			public float[] float_36;

			public Class100(int int_14) : base(int_14)
			{
				int[] array = new int[1];
				this.int_13 = array;
				float[] array2 = new float[1];
				this.float_33 = array2;
				float[] array3 = new float[1];
				this.float_35 = array3;
				float[] array4 = new float[1];
				this.float_36 = array4;
				//base..ctor(int_14);
				this.float_34 = new float[3];
			}

			public override void vmethod_0(Class82 class82_0, zzSoundClass class107_0, Class101 class101_0)
			{
				int num = this.vmethod_4(class107_0);
				this.int_6 = class82_0.method_13(num);
				this.int_11 = class82_0.method_13(num);
				if (class101_0 != null)
				{
					class101_0.method_0(this.int_6, num);
					class101_0.method_0(this.int_11, num);
				}
			}

			public override void vmethod_6(Class82 class82_0, Class101 class101_0)
			{
				if (this.int_6 != 0)
				{
					this.int_7 = class82_0.method_13(2);
					if (class101_0 != null)
					{
						class101_0.method_0(this.int_7, 2);
					}
				}
				if (this.int_11 != 0)
				{
					this.int_12 = class82_0.method_13(2);
					if (class101_0 != null)
					{
						class101_0.method_0(this.int_12, 2);
					}
				}
			}

			public override void vmethod_1(Class82 class82_0, zzSoundClass class107_0)
			{
				base.vmethod_1(class82_0, class107_0);
				if (this.int_11 != 0)
				{
					switch (this.int_12)
					{
					case 0:
						this.float_30 = Class92.Class94.float_0[class82_0.method_13(6)];
						this.float_31 = Class92.Class94.float_0[class82_0.method_13(6)];
						this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)];
						break;
					case 1:
						this.float_30 = (this.float_31 = Class92.Class94.float_0[class82_0.method_13(6)]);
						this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)];
						break;
					case 2:
						this.float_30 = (this.float_31 = (this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)]));
						break;
					case 3:
						this.float_30 = Class92.Class94.float_0[class82_0.method_13(6)];
						this.float_31 = (this.float_32 = Class92.Class94.float_0[class82_0.method_13(6)]);
						break;
					}
					this.vmethod_5(class107_0, this.int_11, 1, this.float_33, this.int_13, this.float_35, this.float_36);
				}
			}

			public override bool vmethod_2(Class82 class82_0)
			{
				bool result = base.vmethod_2(class82_0);
				if (this.int_11 != 0)
				{
					if (this.float_25[1] != null)
					{
						int num = class82_0.method_13(this.int_13[0]);
						num += num << 1;
						float[] array = this.float_34;
						float[] array2 = this.float_25[1];
						int num2 = num;
						array[0] = array2[num2++];
						array[1] = array2[num2++];
						array[2] = array2[num2];
					}
					else
					{
						this.float_34[0] = (float)class82_0.method_13(this.int_13[0]) * this.float_33[0] - 1f;
						this.float_34[1] = (float)class82_0.method_13(this.int_13[0]) * this.float_33[0] - 1f;
						this.float_34[2] = (float)class82_0.method_13(this.int_13[0]) * this.float_33[0] - 1f;
					}
				}
				return result;
			}

			public override bool vmethod_3(Enum4 enum4_0, Class80 class80_0, Class80 class80_1)
			{
				bool result = base.vmethod_3(enum4_0, class80_0, class80_1);
				if (this.int_11 != 0 && enum4_0 != Enum4.const_1)
				{
					float num = this.float_34[this.int_10 - 1];
					if (this.float_25[1] == null)
					{
						num = (num + this.float_36[0]) * this.float_35[0];
					}
					if (this.int_9 <= 4)
					{
						num *= this.float_30;
					}
					else if (this.int_9 <= 8)
					{
						num *= this.float_31;
					}
					else
					{
						num *= this.float_32;
					}
					if (enum4_0 == Enum4.const_0)
					{
						class80_1.method_2(num, this.int_5);
					}
					else
					{
						class80_0.method_2(num, this.int_5);
					}
				}
				return result;
			}
		}

		public override void vmethod_1()
		{
			switch (this.enum5_0)
			{
			case Enum5.const_1:
			{
				int i;
				for (i = 0; i < this.class107_0.method_26(); i++)
				{
					this.class94_0[i] = new Class93.Class100(i);
				}
				while (i < this.int_0)
				{
					this.class94_0[i] = new Class93.Class99(i);
					i++;
				}
				return;
			}
			case Enum5.const_3:
				for (int i = 0; i < this.int_0; i++)
				{
					this.class94_0[i] = new Class93.Class98(i);
				}
				return;
			}
			for (int i = 0; i < this.int_0; i++)
			{
				this.class94_0[i] = new Class93.Class100(i);
			}
		}

		public override void vmethod_3()
		{
			for (int i = 0; i < this.int_0; i++)
			{
				((Class93.Class98)this.class94_0[i]).vmethod_6(this.class82_0, this.class101_0);
			}
		}
	}
}
